% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R, R/mcmc.R
\name{cmcmc}
\alias{cmcmc}
\alias{mcmc}
\title{Estimate the parameters through MCMC}
\usage{
cmcmc(y, ini_par, g = 5000L, G = 10000L, h = 1, echo = 0)

mcmc(y, ini_par, g = 5000, G = 10000, h = 1, echo = FALSE)
}
\arguments{
\item{y}{vector of returns \[\eqn{y_1, ..., y_N}\].}

\item{ini_par}{vector of parameter initial values.}

\item{g}{number of warm-up iteration, defaults to 5,000.}

\item{G}{number of total iteration, defaults to 10,000.}

\item{h}{time unit, defaults to 1.}

\item{echo}{TRUE or FALSE, whether or not echo the parameters and first 10
volatilities in the first and last ten iterations, defaults to FALSE.}
}
\value{
a list of two elements:
* a vector of the estimated parameters, \eqn{(\mu,k,\theta,\sigma_v,\rho,\lambda,\sigma_j)},
* a matrix record of volatility in which each row represents an
iteration result, i.e., with dimension of \eqn{G\times(N+1)}.
}
\description{
Given \eqn{[y_1,\cdots, y_N]}, to estimate parameters of Heston Stochastic
Volatility Model using MCMC.
* `cmcmc()` implemented in C++, returns only a vector of the estimated
parameters.
* `mcmc()` implemented in R.
}
\details{
Priors for and updating functions of these parameters:

|prior|updating function|
|:---|:---|
|\eqn{\mu \sim \mathcal{N}(0,0.1^2) }|  [rmu()]|
|\eqn{ k \sim \mathcal{N}(0.01,1^2) }|  [rk()]|
|\eqn{\theta \sim \mathcal{N}(0.01,1^2)}|  [rtheta()]|
|\eqn{\sigma_v \sim Gamma(shape=2,rate=1)}|  [rsigma_v()]|
|\eqn{\rho \sim Uniform(-1,1)}|  [rrho()]|
|\eqn{\lambda \sim Beta(2,40)}|  [rlambda()]|
|\eqn{\sigma_j^2 \sim InverseGamma(5.0,20)}| [rsigma_j()]|

Prior for the starting volatility: an uniform distribution over a large
range. (Depreciated
\eqn{v_0 \sim Gamma(shape=2k\theta/\sigma_v^2, rate=2k/\sigma_v^2)}.)

Updating functions of volatility:
* \eqn{v_0}: [rv0()]
* \eqn{v_n}: [rvi()] for \eqn{1\le n < N}
* \eqn{v_N}: [rvN()]
}
\examples{
y = rep(0.125,20)
ini_par=c(0.0625,0.05,0.125,0.05,-0.35, 0.01, 0.5)
mcmc(y, ini_par)
}
